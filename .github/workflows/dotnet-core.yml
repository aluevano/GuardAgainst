name: build/test/pack/nuget/release

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  BUILD_NUMBER: 4.0.2.${{ github.run_number }}
  DOTNET_VERSION: 3.1.x
  SOLUTION_PATH: ./src/GuardAgainstLib.sln
  PROJECT_PATH: ./src/GuardAgainstLib/GuardAgainstLib.csproj
  CONFIGURATION: Release
  ARITFACT_PATH: ./dist

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: setup dotnet core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: clean
        run: dotnet clean --configuration ${{ env.CONFIGURATION }} --nologo ${{ env.SOLUTION_PATH }}

      - name: restore
        run: dotnet restore ${{ env.SOLUTION_PATH }}

      - name: build
        run: dotnet build --configuration ${{ env.CONFIGURATION }} --no-restore --nologo /p:BuildNumber=${{ env.BUILD_NUMBER }} -p:Version=${{ env.BUILD_NUMBER }} ${{ env.SOLUTION_PATH }}

      - name: test
        run: dotnet test --configuration ${{ env.CONFIGURATION }} --no-restore --no-build --verbosity normal --nologo ${{ env.SOLUTION_PATH }}

      #- name: Publish
      #  run: dotnet publish ${{ env.PROJECT_PATH }} --configuration ${{ env.CONFIGURATION }} --no-build --no-restore --nologo --output ${{ env.ARITFACT_PATH }}

      - name: pack
        run: dotnet pack
          ${{ env.PROJECT_PATH }}
          --configuration ${{ env.CONFIGURATION }}
          --no-build
          --no-restore
          --nologo
          --verbosity Detailed
          /p:Version=${{ env.BUILD_NUMBER }}
          /p:PackageVersion=${{ env.BUILD_NUMBER }}
          --output ${{ env.ARITFACT_PATH }}

      - name: upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: artifacts
          path: ${{ env.ARITFACT_PATH }}/GuardAgainst.${{ env.BUILD_NUMBER }}.nupkg

      - name: push to nuget
        run: dotnet nuget push ${{ env.ARITFACT_PATH }}/GuardAgainst.${{ env.BUILD_NUMBER }}.nupkg --api-key ${{ secrets.NUGET_KEY }} --source https://api.nuget.org/v3/index.json

      - name: create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.BUILD_NUMBER }}
          release_name: Release ${{ env.BUILD_NUMBER }}
          draft: false
          prerelease: false

      - name: upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARITFACT_PATH }}/GuardAgainst.${{ env.BUILD_NUMBER }}.nupkg
          asset_name: GuardAgainst.${{ env.BUILD_NUMBER }}.nupkg
          asset_content_type: application/zip
